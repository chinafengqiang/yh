<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd    
 http://www.springframework.org/schema/context    
 http://www.springframework.org/schema/context/spring-context-3.2.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<context:component-scan base-package="com.yh" />

	<!--<mvc:annotation-driven />-->
	
	<mvc:annotation-driven>
    	<mvc:message-converters>
    		<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
    			<property name="objectMapper" ref="customObjectMapper"></property>
    		</bean>
    	</mvc:message-converters>
    </mvc:annotation-driven>
	<bean id="customObjectMapper" class="com.yh.utils.CustomObjectMapper"></bean>
	
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/app/**" location="/app/" />
	<mvc:resources mapping="/static/**" location="/static/" />
	<mvc:resources mapping="/commons/**" location="/commons/" />

	<!-- annotation默认的方法映射适配器 -->
	<!-- <bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> 
	</bean>
	<bean id="handlerAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />-->


	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<!-- 配置一下对json数据的转换 -->
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
			</list>
		</property>
	</bean>
	
	<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀 InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		
		<!-- 在没有扩展名时即: "/blog/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html" />

		<!-- 扩展名至mimeType的映射,即 /blog.json => application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="pdf" value="application/pdf" />
				<entry key="xsl" value="application/vnd.ms-excel" />
				<entry key="xml" value="application/xml" />
				<entry key="json" value="application/json" />
			</map>
		</property>
	
		<!-- 用于开启 /blog/123?format=json的支持 favorParameter为true时支持false为不支持 -->
		<property name="favorParameter" value="true" />
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/view/" />
					<property name="suffix" value=".jsp"></property>
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<!-- for application/xml -->
				<!-- 
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView"> 
					<property name="marshaller"> 
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller"/> 
					</property> 
				</bean> 
				-->
			</list>
		</property>
	</bean>
	
	
	<!-- 总错误处理-->  
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
    	<property name="defaultErrorView">    
        	<value>/error/error</value>  
    	</property>
    	<property name="defaultStatusCode">    
        	<value>500</value>  
    	</property>     
		<property name="warnLogCategory">    
        	<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>  
    	</property>     
	</bean>
		
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="0" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<!-- 定义消息资源文件的相对路径 -->
			<value>messages/message</value>
		</property>
	</bean>
</beans>